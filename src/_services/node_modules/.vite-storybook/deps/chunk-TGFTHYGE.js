import {
  require_react
} from "./chunk-TW7ERABM.js";
import {
  __toESM,
  init_define_import_meta_env
} from "./chunk-CCD2FOVN.js";

// node_modules/@radix-ui/react-id/dist/index.module.js
init_define_import_meta_env();

// node_modules/@radix-ui/react-use-layout-effect/dist/index.module.js
init_define_import_meta_env();
var o = __toESM(require_react());
var useLayoutEffect2 = Boolean(null === globalThis || void 0 === globalThis ? void 0 : globalThis.document) ? o.useLayoutEffect : () => {
};

// node_modules/@radix-ui/react-id/dist/index.module.js
var e = __toESM(require_react());
var r = e["useId".toString()] || (() => {
});
var n = 0;
function useId(o2) {
  const [u, i] = e.useState(r());
  return useLayoutEffect2(() => {
    o2 || i((t2) => null != t2 ? t2 : String(n++));
  }, [o2]), o2 || (u ? `radix-${u}` : "");
}

// node_modules/@radix-ui/react-context/dist/index.module.js
init_define_import_meta_env();
var e2 = __toESM(require_react());
function createContext2(t2, n2) {
  const o2 = e2.createContext(n2);
  function r2(t3) {
    const { children: n3, ...r3 } = t3, c = e2.useMemo(() => r3, Object.values(r3));
    return e2.createElement(o2.Provider, { value: c }, n3);
  }
  return r2.displayName = t2 + "Provider", [r2, function(r3) {
    const c = e2.useContext(o2);
    if (c)
      return c;
    if (void 0 !== n2)
      return n2;
    throw new Error(`\`${r3}\` must be used within \`${t2}\``);
  }];
}
function createContextScope(n2, o2 = []) {
  let r2 = [];
  const c = () => {
    const t2 = r2.map((t3) => e2.createContext(t3));
    return function(o3) {
      const r3 = (null == o3 ? void 0 : o3[n2]) || t2;
      return e2.useMemo(() => ({ [`__scope${n2}`]: { ...o3, [n2]: r3 } }), [o3, r3]);
    };
  };
  return c.scopeName = n2, [function(t2, o3) {
    const c2 = e2.createContext(o3), u = r2.length;
    function s(t3) {
      const { scope: o4, children: r3, ...s2 } = t3, i = (null == o4 ? void 0 : o4[n2][u]) || c2, a = e2.useMemo(() => s2, Object.values(s2));
      return e2.createElement(i.Provider, { value: a }, r3);
    }
    return r2 = [...r2, o3], s.displayName = t2 + "Provider", [s, function(r3, s2) {
      const i = (null == s2 ? void 0 : s2[n2][u]) || c2, a = e2.useContext(i);
      if (a)
        return a;
      if (void 0 !== o3)
        return o3;
      throw new Error(`\`${r3}\` must be used within \`${t2}\``);
    }];
  }, t(c, ...o2)];
}
function t(...t2) {
  const n2 = t2[0];
  if (1 === t2.length)
    return n2;
  const o2 = () => {
    const o3 = t2.map((e3) => ({ useScope: e3(), scopeName: e3.scopeName }));
    return function(t3) {
      const r2 = o3.reduce((e3, { useScope: n3, scopeName: o4 }) => ({ ...e3, ...n3(t3)[`__scope${o4}`] }), {});
      return e2.useMemo(() => ({ [`__scope${n2.scopeName}`]: r2 }), [r2]);
    };
  };
  return o2.scopeName = n2.scopeName, o2;
}

export {
  useLayoutEffect2 as useLayoutEffect,
  useId,
  createContext2 as createContext,
  createContextScope
};
//# sourceMappingURL=chunk-TGFTHYGE.js.map
