import {
  Primitive,
  composeEventHandlers,
  useControllableState
} from "./chunk-2I4RMD4V.js";
import {
  _extends,
  init_extends
} from "./chunk-OEZEVKV6.js";
import {
  require_react
} from "./chunk-TW7ERABM.js";
import {
  __toESM,
  init_define_import_meta_env
} from "./chunk-CCD2FOVN.js";

// node_modules/@radix-ui/react-toggle/dist/index.module.js
init_define_import_meta_env();
var o = __toESM(require_react());
init_extends();
var Toggle = o.forwardRef((i, s) => {
  const { pressed: d, defaultPressed: n = false, onPressedChange: p, ...l } = i, [m = false, f] = useControllableState({ prop: d, onChange: p, defaultProp: n });
  return o.createElement(Primitive.button, _extends({ type: "button", "aria-pressed": m, "data-state": m ? "on" : "off", "data-disabled": i.disabled ? "" : void 0 }, l, { ref: s, onClick: composeEventHandlers(i.onClick, () => {
    i.disabled || f(!m);
  }) }));
});
var Root = Toggle;

export {
  Toggle,
  Root
};
//# sourceMappingURL=chunk-3UP2FQE7.js.map
