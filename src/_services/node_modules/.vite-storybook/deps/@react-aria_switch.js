import {
  $e6afbd83fe6ebbd2$export$4c014de7c8940b4c
} from "./chunk-EX7LMIA7.js";
import {
  $f6c31cce2adf654f$export$45712eceda6fad21
} from "./chunk-MXUHVPKT.js";
import {
  $3ef42575df84b30b$export$9d1611c77c2fe928,
  $65484d02dcb7eb3e$export$457c3d6518dd4c6f
} from "./chunk-QXUDZDAI.js";
import "./chunk-M2VHT2SL.js";
import "./chunk-IZ63RBVG.js";
import "./chunk-TW7ERABM.js";
import "./chunk-ONM5EPDC.js";
import {
  init_define_import_meta_env
} from "./chunk-CCD2FOVN.js";

// dep:@react-aria_switch
init_define_import_meta_env();

// node_modules/@react-aria/switch/dist/module.js
init_define_import_meta_env();

// node_modules/@react-aria/toggle/dist/module.js
init_define_import_meta_env();
function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, { get: v, set: s, enumerable: true, configurable: true });
}
var $d2c8e2b0480f3f34$exports = {};
$parcel$export($d2c8e2b0480f3f34$exports, "useToggle", () => $d2c8e2b0480f3f34$export$cbe85ee05b554577);
function $d2c8e2b0480f3f34$export$cbe85ee05b554577(props, state, ref) {
  let { isDisabled = false, isRequired, isReadOnly, value, name, children, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, validationState = "valid" } = props;
  let onChange = (e) => {
    e.stopPropagation();
    state.setSelected(e.target.checked);
  };
  let hasChildren = children != null;
  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;
  if (!hasChildren && !hasAriaLabel)
    console.warn("If you do not provide children, you must specify an aria-label for accessibility");
  let { pressProps } = $f6c31cce2adf654f$export$45712eceda6fad21({
    isDisabled
  });
  let { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, ref);
  let interactions = $3ef42575df84b30b$export$9d1611c77c2fe928(pressProps, focusableProps);
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, {
    labelable: true
  });
  return {
    inputProps: $3ef42575df84b30b$export$9d1611c77c2fe928(domProps, {
      "aria-invalid": validationState === "invalid" || void 0,
      "aria-errormessage": props["aria-errormessage"],
      "aria-controls": props["aria-controls"],
      "aria-readonly": isReadOnly || void 0,
      "aria-required": isRequired || void 0,
      onChange,
      disabled: isDisabled,
      value,
      name,
      type: "checkbox",
      ...interactions
    })
  };
}

// node_modules/@react-aria/switch/dist/module.js
function $parcel$export2(e, n, v, s) {
  Object.defineProperty(e, n, { get: v, set: s, enumerable: true, configurable: true });
}
var $b418ec0c85c52f27$exports = {};
$parcel$export2($b418ec0c85c52f27$exports, "useSwitch", () => $b418ec0c85c52f27$export$d853f7095ae95f88);
function $b418ec0c85c52f27$export$d853f7095ae95f88(props, state, ref) {
  let { inputProps } = $d2c8e2b0480f3f34$export$cbe85ee05b554577(props, state, ref);
  let { isSelected } = state;
  return {
    inputProps: {
      ...inputProps,
      role: "switch",
      checked: isSelected,
      "aria-checked": isSelected
    }
  };
}
export {
  $b418ec0c85c52f27$export$d853f7095ae95f88 as useSwitch
};
//# sourceMappingURL=@react-aria_switch.js.map
