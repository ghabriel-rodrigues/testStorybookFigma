{
  "version": 3,
  "sources": ["dep:@react-aria_tooltip", "../../../../../node_modules/@react-aria/tooltip/dist/packages/@react-aria/tooltip/src/index.ts", "../../../../../node_modules/@react-aria/tooltip/dist/packages/@react-aria/tooltip/src/useTooltip.ts", "../../../../../node_modules/@react-aria/tooltip/dist/packages/@react-aria/tooltip/src/useTooltipTrigger.ts"],
  "sourcesContent": ["\nexport * from \"../../node_modules/@react-aria/tooltip/dist/module.js\"", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useTooltip';\nexport * from './useTooltipTrigger';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTooltipProps} from '@react-types/tooltip';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {HTMLAttributes} from 'react';\nimport {TooltipTriggerState} from '@react-stately/tooltip';\nimport {useHover} from '@react-aria/interactions';\n\ninterface TooltipAria {\n  /**\n   * Props for the tooltip element.\n   */\n  tooltipProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the accessibility implementation for a Tooltip component.\n */\nexport function useTooltip(props: AriaTooltipProps, state?: TooltipTriggerState): TooltipAria {\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  let {hoverProps} = useHover({\n    onHoverStart: () => state?.open(true),\n    onHoverEnd: () => state?.close()\n  });\n\n  return {\n    tooltipProps: mergeProps(domProps, hoverProps, {\n      role: 'tooltip'\n    })\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusEvents} from '@react-types/shared';\nimport {getInteractionModality, HoverProps, isFocusVisible, PressProps, usePress} from '@react-aria/interactions';\nimport {HTMLAttributes, RefObject, useEffect, useRef} from 'react';\nimport {mergeProps, useId} from '@react-aria/utils';\nimport {TooltipTriggerProps} from '@react-types/tooltip';\nimport {TooltipTriggerState} from '@react-stately/tooltip';\nimport {useFocusable} from '@react-aria/focus';\nimport {useHover} from '@react-aria/interactions';\n\ninterface TooltipTriggerAria {\n  /**\n   * Props for the trigger element.\n   */\n  triggerProps: HTMLAttributes<HTMLElement> & PressProps & HoverProps & FocusEvents,\n\n  /**\n   * Props for the overlay container element.\n   */\n  tooltipProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a tooltip trigger, e.g. a button\n * that shows a description when focused or hovered.\n */\nexport function useTooltipTrigger(props: TooltipTriggerProps, state: TooltipTriggerState, ref: RefObject<HTMLElement>) : TooltipTriggerAria {\n  let {\n    isDisabled,\n    trigger\n  } = props;\n\n  let tooltipId = useId();\n\n  let isHovered = useRef(false);\n  let isFocused = useRef(false);\n\n  let handleShow = () => {\n    if (isHovered.current || isFocused.current) {\n      state.open(isFocused.current);\n    }\n  };\n\n  let handleHide = (immediate?: boolean) => {\n    if (!isHovered.current && !isFocused.current) {\n      state.close(immediate);\n    }\n  };\n\n  useEffect(() => {\n    let onKeyDown = (e) => {\n      if (ref && ref.current) {\n        // Escape after clicking something can give it keyboard focus\n        // dismiss tooltip on esc key press\n        if (e.key === 'Escape') {\n          state.close(true);\n        }\n      }\n    };\n    if (state.isOpen) {\n      document.addEventListener('keydown', onKeyDown, true);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown, true);\n      };\n    }\n  }, [ref, state]);\n\n  let onHoverStart = () => {\n    if (trigger === 'focus') {\n      return;\n    }\n    // In chrome, if you hover a trigger, then another element obscures it, due to keyboard\n    // interactions for example, hover will end. When hover is restored after that element disappears,\n    // focus moves on for example, then the tooltip will reopen. We check the modality to know if the hover\n    // is the result of moving the mouse.\n    if (getInteractionModality() === 'pointer') {\n      isHovered.current = true;\n    } else {\n      isHovered.current = false;\n    }\n    handleShow();\n  };\n\n  let onHoverEnd = () => {\n    if (trigger === 'focus') {\n      return;\n    }\n    // no matter how the trigger is left, we should close the tooltip\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide();\n  };\n\n  let onPressStart = () => {\n    // no matter how the trigger is pressed, we should close the tooltip\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide(true);\n  };\n\n  let onFocus = () => {\n    let isVisible = isFocusVisible();\n    if (isVisible) {\n      isFocused.current = true;\n      handleShow();\n    }\n  };\n\n  let onBlur = () => {\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide(true);\n  };\n\n  let {hoverProps} = useHover({\n    isDisabled,\n    onHoverStart,\n    onHoverEnd\n  });\n\n  let {pressProps} = usePress({onPressStart});\n\n  let {focusableProps} = useFocusable({\n    isDisabled,\n    onFocus,\n    onBlur\n  }, ref);\n\n  return {\n    triggerProps: {\n      'aria-describedby': state.isOpen ? tooltipId : undefined,\n      ...mergeProps(focusableProps, hoverProps, pressProps)\n    },\n    tooltipProps: {\n      id: tooltipId\n    }\n  };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;mDE4B2B,OAAyB,OAA0C;AAC5F,MAAI,WAAW,0CAAe,OAAO;IAAC,WAAW;EAAI,CAAC;AAEtD,MAAI,EAAC,eAAc,0CAAS;IAC1B,cAAY,MAAA;aAAQ,UAAK,QAAL,UAAA,SAAA,SAAA,MAAO,KAAK,IAAI;;IACpC,YAAU,MAAA;aAAQ,UAAK,QAAL,UAAA,SAAA,SAAA,MAAO,MAAK;;EAChC,CAAC;AAED,SAAO;IACL,cAAc,0CAAW,UAAU,YAAY;MAC7C,MAAM;IACR,CAAC;EACH;AACF;;;mDCJkC,OAA4B,OAA4B,KAAkD;AAC1I,MAAI,EAAC,YACO,YAER;AAEJ,MAAI,YAAY,0CAAK;AAErB,MAAI,YAAY,yBAAO,KAAK;AAC5B,MAAI,YAAY,yBAAO,KAAK;AAE5B,MAAI,aAAU,MAAS;AACrB,QAAI,UAAU,WAAW,UAAU;AACjC,YAAM,KAAK,UAAU,OAAO;EAEhC;AAEA,MAAI,aAAU,CAAI,cAAwB;AACxC,QAAE,CAAG,UAAU,WAAO,CAAK,UAAU;AACnC,YAAM,MAAM,SAAS;EAEzB;AAEA,8BAAS,MAAO;AACd,QAAI,YAAS,CAAI,MAAM;AACrB,UAAI,OAAO,IAAI,SAGb;AAAA,YAAI,EAAE,QAAQ;AACZ,gBAAM,MAAM,IAAI;MAClB;IAEJ;AACA,QAAI,MAAM,QAAQ;AAChB,eAAS,iBAAiB,WAAW,WAAW,IAAI;AACpD,aAAM,MAAO;AACX,iBAAS,oBAAoB,WAAW,WAAW,IAAI;MACzD;IACF;EACF,GAAG;IAAC;IAAK;EAAK,CAAC;AAEf,MAAI,eAAY,MAAS;AACvB,QAAI,YAAY;AACd;AAMF,QAAI,0CAAsB,MAAO;AAC/B,gBAAU,UAAU;;AAEpB,gBAAU,UAAU;AAEtB,eAAU;EACZ;AAEA,MAAI,aAAU,MAAS;AACrB,QAAI,YAAY;AACd;AAGF,cAAU,UAAU;AACpB,cAAU,UAAU;AACpB,eAAU;EACZ;AAEA,MAAI,eAAY,MAAS;AAEvB,cAAU,UAAU;AACpB,cAAU,UAAU;AACpB,eAAW,IAAI;EACjB;AAEA,MAAI,UAAO,MAAS;AAClB,QAAI,YAAY,0CAAc;AAC9B,QAAI,WAAW;AACb,gBAAU,UAAU;AACpB,iBAAU;IACZ;EACF;AAEA,MAAI,SAAM,MAAS;AACjB,cAAU,UAAU;AACpB,cAAU,UAAU;AACpB,eAAW,IAAI;EACjB;AAEA,MAAI,EAAC,eAAc,0CAAS;;;;EAI5B,CAAC;AAED,MAAI,EAAC,eAAc,0CAAS;;EAAa,CAAC;AAE1C,MAAI,EAAC,mBAAkB,0CAAa;;;;EAIpC,GAAG,GAAG;AAEN,SAAO;IACL,cAAc;MACZ,oBAAoB,MAAM,SAAS,YAAY;SAC5C,0CAAW,gBAAgB,YAAY,UAAU;IACtD;IACA,cAAc;MACZ,IAAI;IACN;EACF;AACF;",
  "names": []
}
