import {
  _extends,
  init_extends
} from "./chunk-OEZEVKV6.js";
import {
  require_react
} from "./chunk-TW7ERABM.js";
import {
  __toESM,
  init_define_import_meta_env
} from "./chunk-CCD2FOVN.js";

// node_modules/@radix-ui/react-compose-refs/dist/index.module.js
init_define_import_meta_env();
var o = __toESM(require_react());
function composeRefs(...o3) {
  return (e2) => o3.forEach((o4) => function(o5, e3) {
    "function" == typeof o5 ? o5(e3) : null != o5 && (o5.current = e3);
  }(o4, e2));
}
function useComposedRefs(...e2) {
  return o.useCallback(composeRefs(...e2), e2);
}

// node_modules/@radix-ui/react-slot/dist/index.module.js
init_define_import_meta_env();
var t = __toESM(require_react());
init_extends();
var Slot = t.forwardRef((e2, o3) => {
  const { children: a, ...s } = e2;
  return t.Children.toArray(a).some(l) ? t.createElement(t.Fragment, null, t.Children.map(a, (e3) => l(e3) ? t.createElement(n, _extends({}, s, { ref: o3 }), e3.props.children) : e3)) : t.createElement(n, _extends({}, s, { ref: o3 }), a);
});
Slot.displayName = "Slot";
var n = t.forwardRef((r2, n2) => {
  const { children: l2, ...a } = r2;
  return t.isValidElement(l2) ? t.cloneElement(l2, { ...o2(a, l2.props), ref: composeRefs(n2, l2.ref) }) : t.Children.count(l2) > 1 ? t.Children.only(null) : null;
});
n.displayName = "SlotClone";
var Slottable = ({ children: e2 }) => t.createElement(t.Fragment, null, e2);
function l(e2) {
  return t.isValidElement(e2) && e2.type === Slottable;
}
function o2(e2, t3) {
  const r2 = { ...t3 };
  for (const n2 in t3) {
    const l2 = e2[n2], o3 = t3[n2];
    /^on[A-Z]/.test(n2) ? r2[n2] = (...e3) => {
      null == o3 || o3(...e3), null == l2 || l2(...e3);
    } : "style" === n2 ? r2[n2] = { ...l2, ...o3 } : "className" === n2 && (r2[n2] = [l2, o3].filter(Boolean).join(" "));
  }
  return { ...e2, ...r2 };
}

// node_modules/@radix-ui/react-primitive/dist/index.module.js
init_define_import_meta_env();
var r = __toESM(require_react());
init_extends();
var Primitive = ["a", "button", "div", "h2", "h3", "img", "li", "nav", "ol", "p", "span", "svg", "ul"].reduce((o3, i) => ({ ...o3, [i]: r.forwardRef((o4, m) => {
  const { asChild: a, ...s } = o4, n2 = a ? Slot : i;
  return r.useEffect(() => {
    window[Symbol.for("radix-ui")] = true;
  }, []), r.createElement(n2, _extends({}, s, { ref: m }));
}) }), {});

// node_modules/@radix-ui/react-use-controllable-state/dist/index.module.js
init_define_import_meta_env();

// node_modules/@radix-ui/react-use-callback-ref/dist/index.module.js
init_define_import_meta_env();
var e = __toESM(require_react());
function useCallbackRef(r2) {
  const t3 = e.useRef(r2);
  return e.useEffect(() => {
    t3.current = r2;
  }), e.useMemo(() => (...e2) => {
    var r3;
    return null === (r3 = t3.current) || void 0 === r3 ? void 0 : r3.call(t3, ...e2);
  }, []);
}

// node_modules/@radix-ui/react-use-controllable-state/dist/index.module.js
var t2 = __toESM(require_react());
function useControllableState({ prop: o3, defaultProp: r2, onChange: n2 = () => {
} }) {
  const [a, u] = function({ defaultProp: o4, onChange: r3 }) {
    const n3 = t2.useState(o4), [a2] = n3, u2 = t2.useRef(a2), c2 = useCallbackRef(r3);
    return t2.useEffect(() => {
      u2.current !== a2 && (c2(a2), u2.current = a2);
    }, [a2, u2, c2]), n3;
  }({ defaultProp: r2, onChange: n2 }), c = void 0 !== o3, f = c ? o3 : a, l2 = useCallbackRef(n2);
  return [f, t2.useCallback((e2) => {
    if (c) {
      const t3 = e2, r3 = "function" == typeof e2 ? t3(o3) : e2;
      r3 !== o3 && l2(r3);
    } else
      u(e2);
  }, [c, o3, u, l2])];
}

// node_modules/@radix-ui/primitive/dist/index.module.js
init_define_import_meta_env();
function composeEventHandlers(e2, n2, { checkForDefaultPrevented: t3 = true } = {}) {
  return function(r2) {
    if (null == e2 || e2(r2), false === t3 || !r2.defaultPrevented)
      return null == n2 ? void 0 : n2(r2);
  };
}

export {
  useComposedRefs,
  Slot,
  Primitive,
  useCallbackRef,
  useControllableState,
  composeEventHandlers
};
//# sourceMappingURL=chunk-2I4RMD4V.js.map
