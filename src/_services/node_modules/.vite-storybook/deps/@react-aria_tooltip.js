import {
  $e6afbd83fe6ebbd2$export$4c014de7c8940b4c
} from "./chunk-EX7LMIA7.js";
import {
  $507fabe10e71c6fb$export$630ff653c5ada6a9,
  $507fabe10e71c6fb$export$b9b3dfddab17db27,
  $6179b936705e76d3$export$ae780daf29e6d456,
  $f6c31cce2adf654f$export$45712eceda6fad21
} from "./chunk-MXUHVPKT.js";
import {
  $3ef42575df84b30b$export$9d1611c77c2fe928,
  $65484d02dcb7eb3e$export$457c3d6518dd4c6f,
  $bdb11010cef70236$export$f680877a34711e37
} from "./chunk-QXUDZDAI.js";
import "./chunk-M2VHT2SL.js";
import "./chunk-IZ63RBVG.js";
import {
  require_react
} from "./chunk-TW7ERABM.js";
import "./chunk-ONM5EPDC.js";
import {
  __toESM,
  init_define_import_meta_env
} from "./chunk-CCD2FOVN.js";

// dep:@react-aria_tooltip
init_define_import_meta_env();

// node_modules/@react-aria/tooltip/dist/module.js
init_define_import_meta_env();
var import_react = __toESM(require_react());
function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, { get: v, set: s, enumerable: true, configurable: true });
}
var $326e436e94273fe1$exports = {};
$parcel$export($326e436e94273fe1$exports, "useTooltip", () => $326e436e94273fe1$export$1c4b08e0eca38426);
function $326e436e94273fe1$export$1c4b08e0eca38426(props, state) {
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, {
    labelable: true
  });
  let { hoverProps } = $6179b936705e76d3$export$ae780daf29e6d456({
    onHoverStart: () => {
      return state === null || state === void 0 ? void 0 : state.open(true);
    },
    onHoverEnd: () => {
      return state === null || state === void 0 ? void 0 : state.close();
    }
  });
  return {
    tooltipProps: $3ef42575df84b30b$export$9d1611c77c2fe928(domProps, hoverProps, {
      role: "tooltip"
    })
  };
}
var $4e1b34546679e357$exports = {};
$parcel$export($4e1b34546679e357$exports, "useTooltipTrigger", () => $4e1b34546679e357$export$a6da6c504e4bba8b);
function $4e1b34546679e357$export$a6da6c504e4bba8b(props, state, ref) {
  let { isDisabled, trigger } = props;
  let tooltipId = $bdb11010cef70236$export$f680877a34711e37();
  let isHovered = (0, import_react.useRef)(false);
  let isFocused = (0, import_react.useRef)(false);
  let handleShow = () => {
    if (isHovered.current || isFocused.current)
      state.open(isFocused.current);
  };
  let handleHide = (immediate) => {
    if (!isHovered.current && !isFocused.current)
      state.close(immediate);
  };
  (0, import_react.useEffect)(() => {
    let onKeyDown = (e) => {
      if (ref && ref.current) {
        if (e.key === "Escape")
          state.close(true);
      }
    };
    if (state.isOpen) {
      document.addEventListener("keydown", onKeyDown, true);
      return () => {
        document.removeEventListener("keydown", onKeyDown, true);
      };
    }
  }, [
    ref,
    state
  ]);
  let onHoverStart = () => {
    if (trigger === "focus")
      return;
    if ($507fabe10e71c6fb$export$630ff653c5ada6a9() === "pointer")
      isHovered.current = true;
    else
      isHovered.current = false;
    handleShow();
  };
  let onHoverEnd = () => {
    if (trigger === "focus")
      return;
    isFocused.current = false;
    isHovered.current = false;
    handleHide();
  };
  let onPressStart = () => {
    isFocused.current = false;
    isHovered.current = false;
    handleHide(true);
  };
  let onFocus = () => {
    let isVisible = $507fabe10e71c6fb$export$b9b3dfddab17db27();
    if (isVisible) {
      isFocused.current = true;
      handleShow();
    }
  };
  let onBlur = () => {
    isFocused.current = false;
    isHovered.current = false;
    handleHide(true);
  };
  let { hoverProps } = $6179b936705e76d3$export$ae780daf29e6d456({
    isDisabled,
    onHoverStart,
    onHoverEnd
  });
  let { pressProps } = $f6c31cce2adf654f$export$45712eceda6fad21({
    onPressStart
  });
  let { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c({
    isDisabled,
    onFocus,
    onBlur
  }, ref);
  return {
    triggerProps: {
      "aria-describedby": state.isOpen ? tooltipId : void 0,
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(focusableProps, hoverProps, pressProps)
    },
    tooltipProps: {
      id: tooltipId
    }
  };
}
export {
  $326e436e94273fe1$export$1c4b08e0eca38426 as useTooltip,
  $4e1b34546679e357$export$a6da6c504e4bba8b as useTooltipTrigger
};
//# sourceMappingURL=@react-aria_tooltip.js.map
